<?php

/**
 * @file
 * Install file for wateraid_forms module.
 */

use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\block_content\Entity\BlockContent;

/**
 * Import/revert config.
 */
function wateraid_forms_update_8001() {
  /** @var \Drupal\config_update\ConfigReverter $reverter */
  $reverter = \Drupal::service('config_update.config_update');

  $reverter->revert('entity_view_display', 'user.role.form_manager');

  return t('Update form manager role permissions.');
}

/**
 * Revert form_manager role.
 */
function wateraid_forms_update_8002() {
  /** @var \Drupal\config_update\ConfigReverter $reverter */
  $reverter = \Drupal::service('config_update.config_update');

  $reverter->revert('user_role', 'form_manager');

  return t('Update form manager role permissions.');
}

/**
 * Import/revert config.
 */
function wateraid_forms_update_8003() {
  /** @var \Drupal\config_update\ConfigReverter $reverter */
  $reverter = \Drupal::service('config_update.config_update');

  $reverter->import('webform', 'contact_us');

  return t('Imported Contact Us form.');
}

/**
 * Add url params field to the webform_submission table.
 */
function wateraid_forms_update_8004() {
  $url_params_field_definition = BaseFieldDefinition::create('map')
    ->setName('url_params')
    ->setLabel(t('Url parameters'));

  \Drupal::entityDefinitionUpdateManager()->installFieldStorageDefinition('url_params', 'webform_submission', 'wateraid_forms', $url_params_field_definition);

  return t('Update webform submission table.');
}

/**
 * Revert form_manager role.
 */
function wateraid_forms_update_8005() {
  /** @var \Drupal\config_update\ConfigReverter $reverter */
  $reverter = \Drupal::service('config_update.config_update');

  $reverter->revert('user_role', 'form_manager');

  return t('Update form manager role permissions.');
}

/**
 * Update all content types now that there is a new field.
 */
function wateraid_forms_update_8006(): void {
  /** @var \Drupal\node\NodeInterface[] $nodes */
  $nodes = Drupal::entityTypeManager()->getStorage('node')->loadByProperties();
  foreach ($nodes as $node) {
    if ($node->hasField('field_hero_option')) {
      if (($node->hasField('field_video_url') && $node->get('field_video_url')->getValue()[0] !== NULL)
        || ($node->hasField('field_hero_video_url') && $node->get('field_hero_video_url')->getValue()[0] !== NULL)) {
        $node->set('field_hero_option', 'hero_video');
        $node->save();
      }
      else {
        $node->set('field_hero_option', 'hero');
        $node->save();
      }
    }
    else {
      if ($node->hasField('field_hero')) {
        $paragraph = $node->get('field_hero')->referencedEntities()[0];
        if (isset($paragraph)) {
          if ($paragraph->get('field_hero_video')->getValue()[0] !== NULL && $paragraph->hasField('field_hero_option')) {
            $paragraph->set('field_hero_option', 'hero_video');
            $paragraph->save();
          }
          else {
            $paragraph->set('field_hero_option', 'hero');
            $paragraph->save();
          }
        }
      }
    }
  }
}

/**
 * Update all flexible content entities to have image field.
 */
function wateraid_forms_update_8007(&$sandbox) {
  if (!isset($sandbox['progress'])) {
    $node_count = $nids = Drupal::entityQuery('node')
      ->accessCheck(FALSE)
      ->condition('type', 'flexible_content')
      ->count()
      ->execute();

    if (!$node_count) {
      return t('No nodes to update.');
    }

    $sandbox['progress'] = 0;
    $sandbox['limit'] = 50;
    $sandbox['total'] = $node_count;
  }

  $nids = Drupal::entityQuery('node')
    ->accessCheck(FALSE)
    ->condition('type', 'flexible_content')
    ->range($sandbox['progress'], $sandbox['progress'] + $sandbox['limit'])
    ->execute();

  /** @var \Drupal\node\NodeInterface[] $nodes */
  $nodes = Drupal::entityTypeManager()->getStorage('node')->loadMultiple($nids);

  if (isset($nodes)) {
    foreach ($nodes as $node) {
      if ($node->hasField('field_hero') && $node->get('field_hero')[0] !== NULL) {
        $p_id = $node->get('field_hero')[0]->getValue()['target_id'];
        $paragraph = Drupal::entityTypeManager()->getStorage('paragraph')->load($p_id);
        $hero_value = $paragraph->get('field_hero_image')->getValue()[0]['target_id'];
        $node->set('field_image_reference', $hero_value);
        $node->save();
        $sandbox['progress']++;
      }
    }
  }
  else {
    return t('No nodes to update.');
  }
  $sandbox['#finished'] = $sandbox['progress'] / $sandbox['total'];
}

/**
 * Disable Progress Tracker JS library in Webform config settings.
 */
function wateraid_forms_update_8008(&$sandbox): void {
  $config_key = 'libraries.excluded_libraries';
  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
  $config_factory = \Drupal::service('config.factory');
  $config = $config_factory->getEditable('webform.settings');
  $excluded_libraries = $config->get($config_key);
  $excluded_libraries[] = 'progress-tracker';
  $config->set($config_key, $excluded_libraries)->save();
}

/**
 * Make sure the UUID equals to the one that registered in default config.
 */
function wateraid_forms_update_8009(&$sandbox): void {
  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
  $config_factory = \Drupal::service('config.factory');
  $config = $config_factory->getEditable('views.view.webform_submissions');
  $config->set('uuid', 'f2b9db1a-0042-4e41-973b-5a3a39a750ae')->save();
}

/**
 * Create the footer image block.
 */
function wateraid_forms_update_8010(&$sandbox): void {
  $block = BlockContent::create([
    'info' => 'Footer Image',
    'type' => 'image',
    'langcode' => 'en',
    'uuid' => '0fdddafb-add9-4756-8467-a029c2be7db4',
  ]);
  $block->save();
}

/**
 * Update Webform purge settings to 25.
 */
function wateraid_forms_update_8011(&$sandbox): void {
  /** @var \Drupal\Core\Config\ConfigFactoryInterface $config_factory */
  $config_factory = \Drupal::service('config.factory');
  $config = $config_factory->getEditable('webform.settings');
  $config->set('purge.cron_size', 25)->save();
}
