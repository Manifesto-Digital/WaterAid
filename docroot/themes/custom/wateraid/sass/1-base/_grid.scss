@use "breakpoints";
@use "spacing";

$grid-max-width: 1440px;
$grid-cols-mobile: 4;
$grid-cols-tablet: 6;
$grid-cols-desktop: 12;
$container-padding-mobile: spacing.$wa-spacing-05;
$container-padding-tablet: spacing.$wa-spacing-05;
$container-padding-desktop: spacing.$wa-spacing-09;
$grid-gap-mobile: spacing.$wa-spacing-04;
$grid-gap-tablet: spacing.$wa-spacing-06;

@mixin page-container {
  padding-left: $container-padding-mobile;
  padding-right: $container-padding-mobile;
  max-width: $grid-max-width;
  margin: 0 auto;

  @include breakpoints.tablet {
    padding-left: $container-padding-tablet;
    padding-right: $container-padding-tablet;
  }

  @include breakpoints.desktop {
    padding-left: $container-padding-desktop;
    padding-right: $container-padding-desktop;
  }
}

@mixin grid {
  display: grid;
  grid-template-columns: repeat($grid-cols-mobile, 1fr);
  column-gap: $grid-gap-mobile;

  @include breakpoints.tablet {
    grid-template-columns: repeat($grid-cols-tablet, 1fr);
    column-gap: $grid-gap-tablet;
  }

  @include breakpoints.desktop {
    grid-template-columns: repeat($grid-cols-desktop, 1fr);
  }
}

@mixin grid-item-full {
  grid-column: 1 / calc(#{$grid-cols-mobile} + 1);

  @include breakpoints.tablet {
    grid-column: 1 / calc(#{$grid-cols-tablet} + 1);
  }

  @include breakpoints.desktop {
    grid-column: 1 / calc(#{$grid-cols-desktop} + 1);
  }
}

// Offers control of specific grid placement at each breakpoint.
// If col-start vals are not provided, the item will start on first col.
@mixin grid-item(
  $col-span-mobile: null,
  $col-span-tablet: null,
  $col-span-desktop: null,
  $col-start-mobile: 1,
  $col-start-tablet: 1,
  $col-start-desktop: 1
) {
  /* prettier-ignore */
  grid-column: $col-start-mobile / #{calc($col-span-mobile + $col-start-mobile)};

  @include breakpoints.tablet {
    /* prettier-ignore */
    grid-column: $col-start-tablet / #{calc($col-span-tablet + $col-start-tablet)};
  }

  @include breakpoints.desktop {
    /* prettier-ignore */
    grid-column: $col-start-desktop / #{calc($col-span-desktop + $col-start-desktop)};
  }
}

// Allows grid span repeater that fill a row and overflow onto the next
// row if we run out of cols on the previous one.
@mixin grid-item-span(
  $col-span-mobile: null,
  $col-span-tablet: null,
  $col-span-desktop: null
) {
  grid-column: span $col-span-mobile;

  @include breakpoints.tablet {
    @if $col-span-tablet {
      grid-column: span $col-span-tablet;
    }
  }

  @include breakpoints.desktop {
    @if $col-span-desktop {
      grid-column: span $col-span-desktop;
    }
  }
}
