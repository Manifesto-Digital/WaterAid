name: Deploy Acquia Site
on:
  pull_request:
    branches: [main, develop, staging]
    types: [closed]
  push:
    branches: [feature/WA-367-CI-CD-setup]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        type: choice
        options: [dev, test, prod]
        default: dev
env:
  ACQUIA_SITE: ${{ vars.ACQUIA_SITE }}
  ACQUIA_GIT_HOST: ${{ vars.ACQUIA_GIT_HOST }}
  ACQUIA_CLI_NO_INTERACTION: 1
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'dev' }}
    steps:
      - name: Skip if not desired branch
        if: github.ref_name != 'develop' && github.ref_name != 'staging' && github.ref_name != 'main' && github.ref_name != 'feature/WA-367-CI-CD-setup'
        run: exit 0
      - name: Skip if not merged PR or manual trigger
        if: github.event_name == 'pull_request' && github.event.pull_request.merged == false
        run: exit 0
      - name: Set dev ENV vars
        if: github.ref_name == 'develop'
        run: |
          echo "ENVIRONMENT=${{ inputs.environment || 'dev' }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Set test ENV vars
        if: github.ref_name == 'staging'
        run: |
          echo "ENVIRONMENT=${{ inputs.environment || 'test' }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Set prod ENV vars
        if: github.ref_name == 'main'
        run: |
          echo "ENVIRONMENT=${{ inputs.environment || 'prod' }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Set testing ENV vars
        if: github.ref_name == 'feature/WA-367-CI-CD-setup'
        run: |
          echo "ENVIRONMENT=${{ inputs.environment || 'dev' }}" >> $GITHUB_ENV
          echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_ENV
      - name: Block non-main to prod
        if: env.ENVIRONMENT == 'prod' && env.BRANCH_NAME != 'main'
        run: exit 1
      - uses: actions/checkout@v4
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          tools: composer
          extensions: mbstring, pdo, xml, gd, curl, zip, bcmath, intl
      - name: Install Composer Dependencies
        run: composer install --no-dev --optimize-autoloader
      - name: Install Acquia CLI
        run: |
          curl -sSL https://github.com/acquia/cli/releases/latest/download/acli.phar -o acli
          chmod +x acli && sudo mv acli /usr/local/bin/acli
      - name: Setup SSH key for Acquia Git
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.ACQUIA_SSH_PRIVATE_KEY }}
      - name: Add Acquia host to known_hosts
        run: ssh-keyscan -H ${{ env.ACQUIA_GIT_HOST }} >> ~/.ssh/known_hosts
      - name: Set Git author info for Acquia commit
        run: |
          git config --global user.name "Jenkins"
          git config --global user.email "jenkins@manifesto.co.uk"
      - name: Authenticate & Deploy to Acquia
        run: |
          acli auth:login -k=${{ secrets.ACQUIA_API_KEY_ID }} -s=${{ secrets.ACQUIA_API_KEY_SECRET }}
          acli push:artifact $ACQUIA_SITE.$ENVIRONMENT --no-interaction
          acli remote:drush $ACQUIA_SITE.$ENVIRONMENT -- deploy -y
          done
