name: CI/CD Pipeline

on:
  pull_request:
    branches: [main, develop, staging]
    types: [closed]
  push:
    branches: [pipeline]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        type: choice
        options: [dev, test, prod]
        default: dev

jobs:
  code-sniffer:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container: willhallonline/drupal-phpcs
    steps:
      - uses: actions/checkout@v4

      - name: Run Code Sniffer
        run: |
          HEADER_ROW=1
          CUSTOM_MODULES_PATH="web/modules/custom"
          PHPCS_ERROR_COUNT=$(phpcs --standard=Drupal,DrupalPractice \
            --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,yml \
            --report=csv "$CUSTOM_MODULES_PATH" | wc -l)
          PHPCS_ERROR_COUNT=$((${PHPCS_ERROR_COUNT} - ${HEADER_ROW}))
          if [ ${PHPCS_ERROR_COUNT} -gt ${PHPCS_ERROR_COUNT_BASELINE:-0} ]; then
            mkdir -p test-reports
            phpcs --standard=Drupal,DrupalPractice \
              --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,yml \
              --report-junit=test-reports/phpcs.xml "$CUSTOM_MODULES_PATH"
          else
            echo "Skipping phpcs. $PHPCS_ERROR_COUNT errors were found."
          fi

      - uses: actions/upload-artifact@v4
        with:
          name: phpcs-report
          path: test-reports/

  security-analysis:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    container: composer:2
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apk update && apk add rsync
          composer install --ignore-platform-reqs

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse web/modules/custom web/themes/custom --memory-limit=1G

      - uses: actions/upload-artifact@v4
        with:
          name: phpstan-artifacts
          path: |
            docroot/**
            vendor/**

  drupal:
    if: github.ref == 'refs/heads/pipeline' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container: composer:2
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - uses: actions/cache@v4
        with:
          path: ~/.drush/cache
          key: drush-${{ github.sha }}
          restore-keys: drush-

      - name: Install Drupal
        run: |
          apk update && apk add rsync
          composer install --ignore-platform-reqs
          ln -s docroot web

      - uses: actions/upload-artifact@v4
        with:
          name: drupal-build
          path: |
            docroot/**
            vendor/**

  frontend:
    if: github.ref == 'refs/heads/pipeline' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container:
      image: deeson/fe-node
      options: --user 1000
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: web/themes/custom/wateraid/node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: node-

      - name: Build Frontend
        run: |
          cd web/themes/custom/wateraid
          npm install
          npm run build

      - uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: web/themes/custom/wateraid/**

  deploy:
    needs: [drupal, frontend]
    if: github.ref == 'refs/heads/pipeline' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    container: deeson/deployer:snapshot-fix
    steps:
      - uses: actions/checkout@v4

      - name: Deploy
        run: /opt/ci-tools/deployer.sh

  composer-audit:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.run-security == 'true'
    runs-on: ubuntu-latest
    container: composer:latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          composer install --optimize-autoloader --no-interaction --prefer-dist --ignore-platform-reqs

      - name: Composer audit
        run: composer audit || { echo "Composer audit failed"; exit 1; }

      - uses: actions/upload-artifact@v4
        with:
          name: composer-audit
          path: vendor/**