name: CI/CD Pipeline

on:
  pull_request:
    branches: [main, develop, staging]
    types: [closed]
  push:
    branches: [pipeline]
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment"
        required: true
        type: choice
        options: [dev, test, prod]
        default: dev

jobs:
  code-sniffer:
    name: Code Sniffer
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    container: willhallonline/drupal-phpcs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            custom:
              - 'web/modules/**'
              - 'web/themes/**'

      - name: Run PHPCS
        if: steps.changes.outputs.custom == 'true'
        run: |
          HEADER_ROW=1
          CUSTOM_MODULES_PATH="web/modules/custom"
          PHPCS_ERROR_COUNT=$(phpcs --standard=Drupal,DrupalPractice --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,yml --report=csv "$CUSTOM_MODULES_PATH" | wc -l)
          PHPCS_ERROR_COUNT=$((${PHPCS_ERROR_COUNT} - ${HEADER_ROW}))
          if [ ${PHPCS_ERROR_COUNT} -gt ${PHPCS_ERROR_COUNT_BASELINE:-0} ]; then
            mkdir test-reports
            phpcs --standard=Drupal,DrupalPractice --extensions=php,module,inc,install,test,profile,theme,css,info,txt,md,yml --report-junit=test-reports/phpcs.xml "$CUSTOM_MODULES_PATH"
          else
            echo "Skipping phpcs. $PHPCS_ERROR_COUNT errors were found. The configured baseline is currently set at ${PHPCS_ERROR_COUNT_BASELINE:-0}."
          fi

      - name: Upload test reports
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: phpcs-reports
          path: test-reports/

  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    container: composer:2
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache Drush
        uses: actions/cache@v3
        with:
          path: ~/.drush/cache
          key: ${{ runner.os }}-drush-${{ hashFiles('**/composer.lock') }}

      - name: Install dependencies and run analysis
        run: |
          composer --version && composer install --ignore-platform-reqs
          vendor/bin/phpstan analyse web/modules/custom web/themes/custom --memory-limit=1G

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: security-analysis-build
          path: |
            docroot/
            vendor/
            web

  build-drupal:
    name: Build Drupal
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/pipeline' ||  github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')
    container: composer:2
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache Drush
        uses: actions/cache@v3
        with:
          path: ~/.drush/cache
          key: ${{ runner.os }}-drush-${{ hashFiles('**/composer.lock') }}

      - name: Install system dependencies
        run: |
          apk update && apk add rsync

      - name: Install Composer dependencies
        run: |
          composer --version && composer install --ignore-platform-reqs

      - name: Create symlink for web directory
        run: |
          ln -s docroot web

      - name: Upload Drupal artifacts
        uses: actions/upload-artifact@v4
        with:
          name: drupal-build
          path: |
            docroot/
            vendor/
            web

  build-frontend:
    name: Build Front-End
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')
    container:
      image: deeson/fe-node
      options: --user 1000
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Node modules
        uses: actions/cache@v3
        with:
          path: web/themes/custom/wateraid/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('web/themes/custom/wateraid/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build frontend
        run: |
          cd web/themes/custom/wateraid
          npm install
          npm run build

      - name: Upload frontend artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: web/themes/custom/wateraid/

  composer-audit:
    name: Security check
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    container: composer:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Run security audit
        run: |
          composer --version
          composer install --optimize-autoloader --no-interaction --prefer-dist --ignore-platform-reqs
          composer audit || { echo "Composer audit failed"; exit 1; }

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: composer-audit
          path: |
            vendor/
            composer.lock

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build-drupal, build-frontend]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/tags/')
    container: deeson/deployer:snapshot-fix
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Drupal artifacts
        uses: actions/download-artifact@v3
        with:
          name: drupal-build

      - name: Download frontend artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: web/themes/custom/wateraid/

      - name: Deploy
        run: /opt/ci-tools/deployer.sh